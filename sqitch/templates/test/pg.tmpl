BEGIN;

SELECT no_plan();

[%-#---------------------------------------------------------------------------%]
[%- IF (matches = change.match('^(?:(.*?)\/)?functions/(.*?)$')) -%]
/*****************************************************************************/
-- Include common SQL files

\i sql/constants.sql
\i sql/test/unit_test_data.sql

/****************************************************************************/
-- Uncomment to make it easier testing functions without sqitch rebasing

/* DROP TRIGGER IF EXISTS [% matches.0 %]_some_table_trigger on [% matches.0 %].some_table; */

/* DROP FUNCTION IF EXISTS [% matches.0 %].[$ matches.1 %](); */

/* \i deploy/[% change %].sql */

[%- END -%]

[%-#---------------------------------------------------------------------------%]
[%- IF (matches = change.match('^(?:(.*?)\/)?schemas/(.*?)$')) -%]
/*****************************************************************************/
-- Reserved test

SELECT is(true, true);

[%- END -%]

[%-#---------------------------------------------------------------------------%]
[%- IF (matches = change.match('^(?:(.*?)\/)?tables\/(.*?)(_add.*|_repair.*|_refactor.*)?$')) -%]
/*****************************************************************************/
-- Test expected columns

SELECT col_is_pk('[% matches.0 %]', '[% matches.1 %]', 'id', '[% matches.1 %].id *is* a pk');
SELECT col_is_unique('[% matches.0 %]', '[% matches.1 %]', ARRAY['name'], '[% matches.1 %].name is unique');
SELECT col_not_null('[% matches.0 %]', '[% matches.1 %]', col, 'not null check for [% matches.1 %].' || col)
  FROM (
    VALUES('id'),
          ('name')
  ) AS ctmp (col);

[%-#---------------------------------------------------------------------------%]
[%- IF (matches = change.match('^(?:(.*?)\/)?types/(.*?)$')) -%]
/*****************************************************************************/
-- Test type exists

SELECT has_type('[% matches.0 %]', '[% matches.1 %]', 'has type');

[%- END -%]

/*****************************************************************************/
-- Finish

SELECT * FROM finish();

ROLLBACK;
